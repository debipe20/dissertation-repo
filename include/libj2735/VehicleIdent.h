/*
 * Generated by asn1c-0.9.21 (http://lionet.info/asn1c)
 * From ASN.1 module "MyModule"
 * 	found in "SRM.txt"
 * 	`asn1c -fnative-types`
 */

#ifndef	_VehicleIdent_H_
#define	_VehicleIdent_H_


#include <asn_application.h>

/* Including external dependencies */
#include "DescriptiveName.h"
#include "VINstring.h"
#include <IA5String.h>
#include "TemporaryID.h"
#include "VehicleType.h"
#include <NativeEnumerated.h>
#include <constr_CHOICE.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum vehicleClass_PR {
	vehicleClass_PR_NOTHING,	/* No components present */
	vehicleClass_PR_vGroup,
	vehicleClass_PR_rGroup,
	vehicleClass_PR_rEquip
} vehicleClass_PR;
typedef enum vGroup {
	vGroup_all_vehicles	= 9217,
	vGroup_bicycles	= 9218,
	vGroup_motorcycles	= 9219,
	vGroup_cars	= 9220,
	vGroup_light_vehicles	= 9221,
	vGroup_cars_and_light_vehicles	= 9222,
	vGroup_cars_with_trailers	= 9223,
	vGroup_cars_with_recreational_trailers	= 9224,
	vGroup_vehicles_with_trailers	= 9225,
	vGroup_heavy_vehicles	= 9226,
	vGroup_trucks	= 9227,
	vGroup_buses	= 9228,
	vGroup_articulated_buses	= 9229,
	vGroup_school_buses	= 9230,
	vGroup_vehicles_with_semi_trailers	= 9231,
	vGroup_vehicles_with_double_trailers	= 9232,
	vGroup_high_profile_vehicles	= 9233,
	vGroup_wide_vehicles	= 9234,
	vGroup_long_vehicles	= 9235,
	vGroup_hazardous_loads	= 9236,
	vGroup_exceptional_loads	= 9237,
	vGroup_abnormal_loads	= 9238,
	vGroup_convoys	= 9239,
	vGroup_maintenance_vehicles	= 9240,
	vGroup_delivery_vehicles	= 9241,
	vGroup_vehicles_with_even_numbered_license_plates	= 9242,
	vGroup_vehicles_with_odd_numbered_license_plates	= 9243,
	vGroup_vehicles_with_parking_permits	= 9244,
	vGroup_vehicles_with_catalytic_converters	= 9245,
	vGroup_vehicles_without_catalytic_converters	= 9246,
	vGroup_gas_powered_vehicles	= 9247,
	vGroup_diesel_powered_vehicles	= 9248,
	vGroup_lPG_vehicles	= 9249,
	vGroup_military_convoys	= 9250,
	vGroup_military_vehicles	= 9251
	/*
	 * Enumeration is extensible
	 */
} e_vGroup;
typedef enum rGroup {
	rGroup_emergency_vehicle_units	= 9729,
	rGroup_federal_law_enforcement_units	= 9730,
	rGroup_state_police_units	= 9731,
	rGroup_county_police_units	= 9732,
	rGroup_local_police_units	= 9733,
	rGroup_ambulance_units	= 9734,
	rGroup_rescue_units	= 9735,
	rGroup_fire_units	= 9736,
	rGroup_hAZMAT_units	= 9737,
	rGroup_light_tow_unit	= 9738,
	rGroup_heavy_tow_unit	= 9739,
	rGroup_freeway_service_patrols	= 9740,
	rGroup_transportation_response_units	= 9741,
	rGroup_private_contractor_response_units	= 9742
	/*
	 * Enumeration is extensible
	 */
} e_rGroup;
typedef enum rEquip {
	rEquip_ground_fire_suppression	= 9985,
	rEquip_heavy_ground_equipment	= 9986,
	rEquip_aircraft	= 9988,
	rEquip_marine_equipment	= 9989,
	rEquip_support_equipment	= 9990,
	rEquip_medical_rescue_unit	= 9991,
	rEquip_other	= 9993,
	rEquip_ground_fire_suppression_other	= 9994,
	rEquip_engine	= 9995,
	rEquip_truck_or_aerial	= 9996,
	rEquip_quint	= 9997,
	rEquip_tanker_pumper_combination	= 9998,
	rEquip_brush_truck	= 10000,
	rEquip_aircraft_rescue_firefighting	= 10001,
	rEquip_heavy_ground_equipment_other	= 10004,
	rEquip_dozer_or_plow	= 10005,
	rEquip_tractor	= 10006,
	rEquip_tanker_or_tender	= 10008,
	rEquip_aircraft_other	= 10024,
	rEquip_aircraft_fixed_wing_tanker	= 10025,
	rEquip_helitanker	= 10026,
	rEquip_helicopter	= 10027,
	rEquip_marine_equipment_other	= 10034,
	rEquip_fire_boat_with_pump	= 10035,
	rEquip_boat_no_pump	= 10036,
	rEquip_support_apparatus_other	= 10044,
	rEquip_breathing_apparatus_support	= 10045,
	rEquip_light_and_air_unit	= 10046,
	rEquip_medical_rescue_unit_other	= 10054,
	rEquip_rescue_unit	= 10055,
	rEquip_urban_search_rescue_unit	= 10056,
	rEquip_high_angle_rescue	= 10057,
	rEquip_crash_fire_rescue	= 10058,
	rEquip_bLS_unit	= 10059,
	rEquip_aLS_unit	= 10060,
	rEquip_mobile_command_post	= 10075,
	rEquip_chief_officer_car	= 10076,
	rEquip_hAZMAT_unit	= 10077,
	rEquip_type_i_hand_crew	= 10078,
	rEquip_type_ii_hand_crew	= 10079,
	rEquip_privately_owned_vehicle	= 10083,
	rEquip_other_apparatus_resource	= 10084,
	rEquip_ambulance	= 10085,
	rEquip_bomb_squad_van	= 10086,
	rEquip_combine_harvester	= 10087,
	rEquip_construction_vehicle	= 10088,
	rEquip_farm_tractor	= 10089,
	rEquip_grass_cutting_machines	= 10090,
	rEquip_hAZMAT_containment_tow	= 10091,
	rEquip_heavy_tow	= 10092,
	rEquip_light_tow	= 10094,
	rEquip_flatbed_tow	= 10114,
	rEquip_hedge_cutting_machines	= 10093,
	rEquip_mobile_crane	= 10095,
	rEquip_refuse_collection_vehicle	= 10096,
	rEquip_resurfacing_vehicle	= 10097,
	rEquip_road_sweeper	= 10098,
	rEquip_roadside_litter_collection_crews	= 10099,
	rEquip_salvage_vehicle	= 10100,
	rEquip_sand_truck	= 10101,
	rEquip_snowplow	= 10102,
	rEquip_steam_roller	= 10103,
	rEquip_swat_team_van	= 10104,
	rEquip_track_laying_vehicle	= 10105,
	rEquip_unknown_vehicle	= 10106,
	rEquip_white_lining_vehicle	= 10107,
	rEquip_dump_truck	= 10108,
	rEquip_supervisor_vehicle	= 10109,
	rEquip_snow_blower	= 10110,
	rEquip_rotary_snow_blower	= 10111,
	rEquip_road_grader	= 10112,
	rEquip_steam_truck	= 10113
	/*
	 * Enumeration is extensible
	 */
} e_rEquip;

/* VehicleIdent */
typedef struct VehicleIdent {
	DescriptiveName_t	*name	/* OPTIONAL */;
	VINstring_t	*vin	/* OPTIONAL */;
	IA5String_t	*ownerCode	/* OPTIONAL */;
	TemporaryID_t	*id	/* OPTIONAL */;
	VehicleType_t	*vehicleType	/* OPTIONAL */;
	struct vehicleClass {
		vehicleClass_PR present;
		union VehicleIdent__vehicleClass_u {
			long	 vGroup;
			long	 rGroup;
			long	 rEquip;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *vehicleClass;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} VehicleIdent_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_vGroup_8;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_rGroup_45;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_rEquip_61;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_VehicleIdent;

#ifdef __cplusplus
}
#endif

#endif	/* _VehicleIdent_H_ */
